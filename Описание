Идея поиска максимального пути - выбор случайной начальной вершины и рост в 2 направлениях(у пути есть начало и конец),
путем выборов случайных соседей.

По результатам наблюдений градиентый спуск дает результат не превосходящий результаты обеих версий метрополиса.
Это связано с тем что он всегда рассматривает только один вариант пути. Обычный метрополис дает неплохой результат,
чаще всего меньший чем результат метрополиса с отжигом. Для него следует использовать T <= 25 при k = 1, так как 
при больших значения он с очень большой вероятностью заменяет путь, а это значит, что общее количесво итераций будет
огромным(по моим наблюдениям он может спокойно уйти за 300000 итераций). При использовании отжига есть возможность
использовать большое T(оно будет постепенно уменьшаться), благодаря которому у алгоритма появляется возможность
просмотреть большее количество путей(при правильном T он просмотрит все пути компоненты связности). Именно поэтому
результаты алгоритма метрополиса с отжигом в основном дают максимальные ответы.

Псевдометрополис - это алгоритм метрополиса с попыткой оптимизации количества backtrack'ов. Основная идея заключается
в том, что мы откатываемя назад только при достижении "тупика" и при этом сравнение идет не с предыдущим путем, а с лучшим.
Лучший путь обновляется каждый раз когда новый путь оказывается лучше и именно он выдается в качестве ответа. Откат идет не
на одно ребро, как в стандартном метрополисе, а на случайное число ребер, при чем это число лежит между расстояниями от
текущего конца до первого и последнего разветвлений. Такая оптимизация дает возможность не бегать постоянно по тупиковой ветви,
а вернуться сразу к "потенциальному месту ошибки выбора". В среднем псевдометрополис без отжига проигрывает обеим версиям
метрополиса, но с отжигом он выигравает, за счет сравнения только с максимальным результатом. Стоит отметить, что для него
работают те же правила выбора T.
